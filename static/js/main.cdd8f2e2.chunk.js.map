{"version":3,"sources":["component/BillForm.js","component/Header.js","component/BillModal.js","component/TableRow.js","component/BillTable.js","App.js","reportWebVitals.js","index.js"],"names":["BillForm","initialValues","bill","useState","downloadUrl","setDownloadUrl","vehicleNumberRegx","formik","useFormik","onSubmit","values","resetForm","console","log","JSON","stringify","myHeaders","Headers","append","requestOptions","method","headers","body","redirect","fetch","backendUrl","then","response","text","result","parse","url","window","open","catch","error","validate","errors","buyerCompany","buyerAddress","quantity","Number","isInteger","price","itemName","bag","vehicleNumber","test","Form","handleSubmit","Group","as","Row","className","Label","column","sm","Col","Control","size","type","placeholder","id","name","getFieldProps","buyerName","touched","style","color","min","vehicleFreight","Button","variant","width","href","rel","target","download","Header","Navbar","bg","Container","Collapse","Text","Brand","Toggle","BillModal","show","handleClose","Modal","onHide","closeButton","Title","Body","TableRow","setShow","invoiceNumber","margin","onClick","BillTable","bills","setbills","useEffect","getRecords","process","content","Table","responsive","striped","bordered","hover","map","App","Card","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdd8f2e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport axios from 'axios';\n\nfunction BillForm({ bill }) {\n    const backendUrl = process.env.REACT_APP_API_URL+\"bill_backend/\";\n    const initialValues = bill;\n\n    const [downloadUrl, setDownloadUrl] = useState('')\n\n    const onSubmit = (values, { resetForm }) => {\n        var api = backendUrl + \"bill/generateBill\";\n        console.log(JSON.stringify(values));\n\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: JSON.stringify(values),\n            redirect: 'follow'\n        };\n\n        fetch(api, requestOptions)\n            .then(response => response.text())\n            .then(result => { result = JSON.parse(result); setDownloadUrl(result.url); window.open(result.url, '_blank'); })\n            .catch(error => console.log('error', error));\n        // axios.post(api, JSON.stringify(values))\n        //     .then(function (response) {\n        //         console.log(response);\n        //         resetForm({});\n        //     })\n        //     .catch(function (error) {\n        //         console.log(error);\n        //         alert(error);\n        //     });\n        resetForm({});\n    }\n    const vehicleNumberRegx = /^[A-Z|a-z]{2}\\s?[0-9]{1,2}\\s?[A-Z|a-z]{0,3}\\s?[0-9]{4}$/;\n    const validate = values => {\n        const errors = {};\n        if (!values.buyerCompany) {\n            errors.buyerCompany = 'Required';\n        }\n        if (!values.buyerAddress) {\n            errors.buyerAddress = 'Required';\n        }\n        if (values.quantity < 1) {\n            errors.quantity = \"Please enter valid number\";\n        }\n        if (!Number.isInteger(values.price) || values.price < 1) {\n            errors.price = \"Please enter valid number\";\n        }\n        if (!values.itemName) {\n            errors.itemName = 'Required';\n        }\n        if (!Number.isInteger(values.bag) || values.bag < 1) {\n            errors.bag = \"Please enter valid number\";\n        }\n        if (!values.vehicleNumber) {\n            errors.vehicleNumber = 'Required';\n        } else if (!vehicleNumberRegx.test(values.vehicleNumber)) {\n            errors.vehicleNumber = \"Please enter valid vechicle number.\\n ex: KA11AA1111\";\n        }\n\n        return errors;\n    }\n    const formik = useFormik({\n        initialValues,\n        onSubmit,\n        validate\n    });\n\n\n    return (\n\n        <Form onSubmit={formik.handleSubmit}>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Buyer Name</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Buyer Name\"\n                        id=\"buyerName\"\n                        name=\"buyerName\"\n                        {...formik.getFieldProps('buyerName')}\n                    />\n                    {formik.errors.buyerName && formik.touched.buyerName ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.buyerName}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Company Name</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Company Name\"\n                        id=\"buyerCompany\"\n                        name=\"buyerCompany\"\n                        {...formik.getFieldProps('buyerCompany')}\n                    />\n                    {formik.errors.buyerCompany && formik.touched.buyerCompany ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.buyerCompany}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Buyer Address</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Buyer Address\"\n                        id=\"buyerAddress\"\n                        name=\"buyerAddress\"\n                        {...formik.getFieldProps('buyerAddress')}\n                    />\n                    {formik.errors.buyerAddress && formik.touched.buyerAddress ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.buyerAddress}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Item Name</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Item Name\"\n                        id=\"itemName\"\n                        name=\"itemName\"\n                        {...formik.getFieldProps('itemName')}\n                    />\n                    {formik.errors.itemName && formik.touched.itemName ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.itemName}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Bag</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"number\"\n                        placeholder=\"Bag\"\n                        id=\"bag\"\n                        name=\"bag\"\n                        min=\"1\"\n                        {...formik.getFieldProps('bag')}\n                    />\n                    {formik.errors.bag && formik.touched.bag ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.bag}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Quantity</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Quantity\"\n                        id=\"quantity\"\n                        name=\"quantity\"\n                        min=\"1\"\n                        {...formik.getFieldProps('quantity')}\n                    />\n                    {formik.errors.quantity && formik.touched.quantity ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.quantity}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Price</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"number\"\n                        placeholder=\"Price\"\n                        id=\"price\"\n                        name=\"price\"\n                        min=\"1\"\n                        {...formik.getFieldProps('price')}\n                    />\n                    {formik.errors.price && formik.touched.price ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.price}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Vehicle Number</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"text\"\n                        placeholder=\"Vehicle Number\"\n                        id=\"vehicleNumber\"\n                        name=\"vehicleNumber\"\n                        {...formik.getFieldProps('vehicleNumber')}\n                    />\n                    {formik.errors.vehicleNumber && formik.touched.vehicleNumber ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.vehicleNumber}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} className=\"mb-3\">\n                <Form.Label column sm=\"2\" >Vehicle Freight</Form.Label>\n                <Col sm=\"10\">\n                    <Form.Control size=\"lg\"\n                        type=\"number\"\n                        placeholder=\"Vehicle Freight\"\n                        id=\"vehicleFreight\"\n                        name=\"vehicleFreight\"\n                        min=\"1\"\n                        {...formik.getFieldProps('vehicleFreight')}\n                    />\n                    {formik.errors.vehicleFreight && formik.touched.vehicleFreight ? (\n                        <div style={{ color: \"red\" }}>{formik.errors.vehicleFreight}</div>\n                    ) : null}\n                </Col>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\" style={{ width: \"100%\" }}>Generate Bill</Button>\n            <br />\n            <br />\n            {downloadUrl !== \"\" ?\n                <a href={downloadUrl} rel=\"noopener noreferrer\" target=\"_blank\" download><Button variant=\"success\">Download Bill Again</Button></a>\n                : null\n            }\n        </Form>\n    )\n}\n\nexport default BillForm\n","import React from 'react'\nimport {Navbar, Container } from 'react-bootstrap'\n\nfunction Header() {\n    return (\n        <Navbar bg=\"light\" >\n            <Container>\n                <Navbar.Collapse className=\"justify-content-start\">\n                    <Navbar.Text>\n                        GSTIN:29APAPB5521J1Z4\n                    </Navbar.Text>\n                </Navbar.Collapse>\n                <Navbar.Brand href=\"#home\">\n                    <h2>Indushree Enterpraises</h2>\n                </Navbar.Brand>\n                <Navbar.Toggle />\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Navbar.Text>\n                        Ph:6363585927 <br />\n                        7795290146\n                    </Navbar.Text>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header\n","import React, { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap';\nimport BillForm from './BillForm';\n\nfunction BillModal({ show, handleClose, initialValues }) {\n\n\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Bill Form</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <BillForm bill={initialValues} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default BillModal\n","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap';\nimport BillModal from './BillModal';\n\nfunction TableRow({ bill }) {\n\n    const initialValues = bill\n\n    const [show, setShow] = useState(false);\n    const handleShow = () => { setShow(true) };\n    const handleClose = () => { console.log(\"hello\"); setShow(false) };\n    return (\n        <tr>\n            <td>{bill.invoiceNumber}</td>\n            <td>{bill.buyerName}</td>\n            <td>{bill.buyerCompany}</td>\n            <td>{bill.itemName}</td>\n            <td>{bill.bag}</td>\n            <td>{bill.quantity}</td>\n            <td>{bill.price}</td>\n            <td>{bill.vehicleNumber}</td>\n            <td>{bill.vehicleFreight}</td>\n            <td>{(bill.quantity * bill.price)}</td>\n            <td>\n                <a href={bill.url} rel=\"noopener noreferrer\" target=\"_blank\" download><Button variant=\"success\" style={{width:\"100%\",margin:\"5px\"}}>Download</Button></a>\n                <Button variant=\"primary\" onClick={handleShow} style={{width:\"100%\",margin:\"5px\"}}>Edit</Button>\n            </td>\n            <BillModal show={show} handleClose={handleClose} initialValues={initialValues} />\n        </tr>\n    )\n}\n\nexport default TableRow\n","import React, { useState, useEffect } from 'react'\nimport { Table } from 'react-bootstrap'\nimport TableRow from './TableRow';\n\nfunction BillTable() {\n  const [bills, setbills] = useState([])\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n\n  useEffect(() => {\n    getRecords();\n  }, [])\n  const getRecords = () => {\n    fetch(process.env.REACT_APP_API_URL+\"bill_backend/bill/\", requestOptions)\n      .then(response => response.text())\n      .then(result => { result = JSON.parse(result); setbills(result.content) })\n      .catch(error => console.log('error', error));\n  }\n  return (\n    <Table responsive striped bordered hover>\n      <thead>\n        <tr>\n          <th>Invoice Number</th>\n          <th>Buyer Name</th>\n          <th>Company Name</th>\n          <th>Item Name</th>\n          <th>Bag</th>\n          <th>Quantity</th>\n          <th>Price</th>\n          <th>Vehicle Number</th>\n          <th>Vehicle Freight</th>\n          <th>Amount</th>\n          <th>Invoice</th>\n        </tr>\n      </thead>\n      <tbody>\n        {bills.map(bill => <TableRow key={bill.invoiceNumber} bill={bill} />)}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default BillTable\n","import './App.css';\nimport BillForm from './component/BillForm'\nimport { Container, Card, Accordion, Col, Row, Button } from 'react-bootstrap';\nimport Header from './component/Header';\nimport React, { useState } from 'react';\nimport BillTable from './component/BillTable';\nimport BillModal from './component/BillModal';\n\nfunction App() {\n\n  const [show, setShow] = useState(false);\n  const handleShow = () => { setShow(true) };\n  const handleClose = () => { console.log(\"hello\"); setShow(false) };\n\n  const initialValues = {\n    buyerName: '',\n    buyerCompany: '',\n    buyerAddress: '',\n    quantity: '',\n    price: '',\n    itemName: '',\n    bag: '',\n    vehicleNumber: '',\n    vehicleFreight: ''\n  };\n\n  return (\n    <>\n      <Header />\n      <BillModal show={show} handleClose={handleClose} initialValues={initialValues} />\n      {show}\n      <Container>\n        <Card>\n          <Row>\n            <Col>\n              <h2 className=\"text-right\">Last 10 records</h2>\n            </Col>\n            <Col className=\"text-right\">\n              <Button onClick={handleShow} style={{margin:\"5px\"}}>Add Invoice</Button>\n            </Col>\n          </Row>\n\n          <BillTable />\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}